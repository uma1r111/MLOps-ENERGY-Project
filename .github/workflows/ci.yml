name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install lint tools
        run: |
          python -m pip install --upgrade pip
          pip install ruff black
      - name: Run ruff
        run: ruff check .
      - name: Run black check
        run: black --check .

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q
      - name: Upload coverage (optional)
        if: success()
        run: |
          coverage run -m pytest
          coverage xml

  security:
    name: Security & Dependency Audit
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install project dependencies and pip-audit
        run: |
          python -m pip install --upgrade pip
          # Install runtime deps if requirements.txt exists
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install dev deps which include pip-audit
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      - name: Run pip-audit (fail on critical)
        # This command will cause the job to fail if any CRITICAL vulnerability is found
        run: |
          pip-audit --fail-on vulnerability:critical --require-virt
